package de.hahn.blog.test1213.model.adfbc.service;

import de.hahn.blog.test1213.model.adfbc.service.common.BT1213AppModule;
import de.hahn.blog.test1213.model.adfbc.views.DepartmentsViewImpl;
import de.hahn.blog.test1213.model.adfbc.views.LocationsViewImpl;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 14 16:30:52 CET 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BT1213AppModuleImpl extends ApplicationModuleImpl implements BT1213AppModule {
    private static ADFLogger logger = ADFLogger.createADFLogger(BT1213AppModuleImpl.class);
    /**
     * This is the default constructor (do not remove).
     */
    public BT1213AppModuleImpl() {
    }

    /**
     * Container's getter for CountriesView.
     * @return CountriesView
     */
    public ViewObjectImpl getCountriesView() {
        return (ViewObjectImpl) findViewObject("CountriesView");
    }

    /**
     * Container's getter for DepartmentsView.
     * @return DepartmentsView
     */
    public DepartmentsViewImpl getDepartmentsView() {
        return (DepartmentsViewImpl) findViewObject("DepartmentsView");
    }

    /**
     * Container's getter for EmployeesView.
     * @return EmployeesView
     */
    public ViewObjectImpl getEmployeesView() {
        return (ViewObjectImpl) findViewObject("EmployeesView");
    }

    /**
     * Container's getter for LocationsView.
     * @return LocationsView
     */
    public LocationsViewImpl getLocationsView() {
        return (LocationsViewImpl) findViewObject("LocationsView");
    }

    /**
     * Container's getter for RegionsView.
     * @return RegionsView
     */
    public ViewObjectImpl getRegionsView() {
        return (ViewObjectImpl) findViewObject("RegionsView");
    }

    /**
     * Container's getter for DepartmentsOfEmployeeView.
     * @return DepartmentsOfEmployeeView
     */
    public DepartmentsViewImpl getDepartmentsOfEmployeeView() {
        return (DepartmentsViewImpl) findViewObject("DepartmentsOfEmployeeView");
    }

    /**
     * Container's getter for ManagerOfEmployeeView.
     * @return ManagerOfEmployeeView
     */
    public ViewObjectImpl getManagerOfEmployeeView() {
        return (ViewObjectImpl) findViewObject("ManagerOfEmployeeView");
    }

    /**
     * Container's getter for EmployeesOfDeepartmentView.
     * @return EmployeesOfDeepartmentView
     */
    public ViewObjectImpl getEmployeesOfDeepartmentView() {
        return (ViewObjectImpl) findViewObject("EmployeesOfDeepartmentView");
    }

    /**
     * Container's getter for DepartmentsOfLocationView.
     * @return DepartmentsOfLocationView
     */
    public DepartmentsViewImpl getDepartmentsOfLocationView() {
        return (DepartmentsViewImpl) findViewObject("DepartmentsOfLocationView");
    }

    /**
     * Container's getter for LocationsOfCountryView.
     * @return LocationsOfCountryView
     */
    public LocationsViewImpl getLocationsOfCountryView() {
        return (LocationsViewImpl) findViewObject("LocationsOfCountryView");
    }

    /**
     * Container's getter for CountriesOfRegionView.
     * @return CountriesOfRegionView
     */
    public ViewObjectImpl getCountriesOfRegionView() {
        return (ViewObjectImpl) findViewObject("CountriesOfRegionView");
    }

    /**
     * Container's getter for DepartmentsORTest.
     * @return DepartmentsORTest
     */
    public DepartmentsViewImpl getDepartmentsORTest() {
        return (DepartmentsViewImpl) findViewObject("DepartmentsORTest");
    }

    /**
     * Container's getter for LocationRoView1.
     * @return LocationRoView1
     */
    public ViewObjectImpl getLocationRoView1() {
        return (ViewObjectImpl) findViewObject("LocationRoView1");
    }

    /**
     * Container's getter for MutliColumn1.
     * @return MutliColumn1
     */
    public ViewObjectImpl getMutliColumn1() {
        return (ViewObjectImpl) findViewObject("MutliColumn1");
    }

    /**
     * Container's getter for DeptMgrFkLink1.
     * @return DeptMgrFkLink1
     */
    public ViewLinkImpl getDeptMgrFkLink1() {
        return (ViewLinkImpl) findViewLink("DeptMgrFkLink1");
    }

    /**
     * Container's getter for EmpManagerFkLink1.
     * @return EmpManagerFkLink1
     */
    public ViewLinkImpl getEmpManagerFkLink1() {
        return (ViewLinkImpl) findViewLink("EmpManagerFkLink1");
    }

    /**
     * Container's getter for EmpDeptFkLink1.
     * @return EmpDeptFkLink1
     */
    public ViewLinkImpl getEmpDeptFkLink1() {
        return (ViewLinkImpl) findViewLink("EmpDeptFkLink1");
    }

    /**
     * Container's getter for DeptLocFkLink1.
     * @return DeptLocFkLink1
     */
    public ViewLinkImpl getDeptLocFkLink1() {
        return (ViewLinkImpl) findViewLink("DeptLocFkLink1");
    }

    /**
     * Container's getter for LocCIdFkLink1.
     * @return LocCIdFkLink1
     */
    public ViewLinkImpl getLocCIdFkLink1() {
        return (ViewLinkImpl) findViewLink("LocCIdFkLink1");
    }

    /**
     * Container's getter for CountrRegFkLink1.
     * @return CountrRegFkLink1
     */
    public ViewLinkImpl getCountrRegFkLink1() {
        return (ViewLinkImpl) findViewLink("CountrRegFkLink1");
    }
    
    public Number nextVal(){
        Number number = new SequenceImpl("PS_TXN_SEQ", this).getSequenceNumber();
        logger.info("Next Sequence Number: " + number.toString());
        return number;
    }
}

